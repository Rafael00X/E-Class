// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model User {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  email               String       @unique
  password            String
  username            String
  createdAt           DateTime     @default(now())
  adminClassrooms     Classroom[]
  teacherClassroomIds String[]     @default([]) @db.ObjectId
  teacherClassrooms   Classroom[]  @relation(fields: [teacherClassroomIds], references: [id], name: "teacher")
  studentClassroomIds String[]     @default([]) @db.ObjectId
  studentClassrooms   Classroom[]  @relation(fields: [studentClassroomIds], references: [id], name: "student")
  assignments         Assignment[]
}

model Classroom {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  tags        String[]
  createdAt   DateTime     @default(now())
  adminId     String       @db.ObjectId
  admin       User         @relation(fields: [adminId], references: [id])
  teacherIds  String[]     @db.ObjectId
  teachers    User[]       @relation(fields: [teacherIds], references: [id], name: "teacher")
  studentIds  String[]     @db.ObjectId
  students    User[]       @relation(fields: [studentIds], references: [id], name: "student")
  assignments Assignment[]
}

model Assignment {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  tag         String?
  createdAt   DateTime  @default(now())
  closedAt    DateTime?
  authorId    String    @db.ObjectId
  author      User      @relation(fields: [authorId], references: [id])
  classroomId String    @db.ObjectId
  classroom   Classroom @relation(fields: [classroomId], references: [id])
}
